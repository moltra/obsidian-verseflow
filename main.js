/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var Q=Object.defineProperty;var rt=Object.getOwnPropertyDescriptor;var it=Object.getOwnPropertyNames;var ot=Object.prototype.hasOwnProperty;var lt=(N,B)=>{for(var t in B)Q(N,t,{get:B[t],enumerable:!0})},ct=(N,B,t,e)=>{if(B&&typeof B=="object"||typeof B=="function")for(let s of it(B))!ot.call(N,s)&&s!==t&&Q(N,s,{get:()=>B[s],enumerable:!(e=rt(B,s))||e.enumerable});return N};var pt=N=>ct(Q({},"__esModule",{value:!0}),N);var dt={};lt(dt,{default:()=>q});module.exports=pt(dt);var h=require("obsidian"),Y={planPath:"chronological_plan.vault.json",progressPath:"Bible-Progress.md",mapPath:"bible-read-map.json",eventsPath:"Bible-Read-Events.md",useMap:!0,maxToday:40,previewCount:20,includeDashboardLink:!0,setupOnFirstEnable:!1,initialized:!1,notesBasePath:"VerseNotes",notesSuffix:"_notes.md",notesLinkMode:"dual"},q=class extends h.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new tt(this.app,this));try{this.settings.setupOnFirstEnable&&!this.settings.initialized&&(await this.setupVerseFlowFiles(),this.settings.initialized=!0,await this.saveSettings())}catch(t){}this.addCommand({id:"vf-insert-today-target",name:"Insert Today\u2019s Target",editorCallback:()=>this.insertTodayTarget()}),this.addCommand({id:"vf-finalize",name:"Finalize Bible Read",editorCallback:()=>this.finalizeBibleRead()}),this.addCommand({id:"vf-clear-checkboxes",name:"Clear Bible Checkboxes",editorCallback:()=>this.clearBibleCheckboxes()}),this.addCommand({id:"vf-seed-map-from-progress",name:"Seed Map From Progress",callback:()=>this.seedMapFromProgress()}),this.addCommand({id:"vf-recompute-progress-from-map",name:"Recompute Progress From Map",callback:()=>this.recomputeProgressFromMapCommand()}),this.addCommand({id:"vf-rebuild-map-from-events",name:"Rebuild Map From Events",callback:()=>this.rebuildMapFromEventsCommand()}),this.addCommand({id:"vf-open-dashboard",name:"Open Bible Dashboard",callback:()=>this.openBibleDashboard()}),this.addCommand({id:"vf-insert-progress-summary",name:"Insert Progress Summary (read-only)",callback:()=>this.insertProgressSummary()}),this.addCommand({id:"vf-setup-notes",name:"Setup VerseFlow Files",callback:()=>this.setupVerseFlowFiles()}),this.addCommand({id:"vf-scaffold-chapter-notes",name:"Scaffold Chapter Notes From Plan",callback:()=>this.scaffoldChapterNotesCommand()}),this.addCommand({id:"vf-open-chapter-note-at-cursor",name:"Open Chapter Note at Cursor",editorCallback:()=>this.openChapterNoteAtCursor()}),this.addCommand({id:"vf-append-notes-for-checked",name:"Append Notes For Checked Verses",editorCallback:()=>this.appendNotesForChecked()}),this.addCommand({id:"vf-regenerate-dashboard",name:"Regenerate Bible Dashboard",callback:()=>this.regenerateBibleDashboard()});try{this.addRibbonIcon("checkmark","VerseFlow: Finalize Bible Read",()=>this.finalizeBibleRead())}catch(t){}try{this.addRibbonIcon("document","VerseFlow: Insert Today\u2019s Target",()=>this.insertTodayTarget())}catch(t){}try{this.addRibbonIcon("trash","VerseFlow: Clear Bible Checkboxes",()=>this.clearBibleCheckboxes())}catch(t){}}async loadSettings(){this.settings=Object.assign({},Y,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}todayISO(){return new Date().toISOString().slice(0,10)}parseDateISO(t){return new Date(`${t}T00:00:00`)}async readJson(t){let e=this.app.vault.getAbstractFileByPath(t);if(!e)return null;try{return JSON.parse(await this.app.vault.read(e))}catch(s){return null}}async writeJson(t,e){let s=this.app.vault.getAbstractFileByPath(t),a=JSON.stringify(e,null,2);s instanceof h.TFile?await this.app.vault.modify(s,a):await this.app.vault.create(t,a)}async readText(t){let e=this.app.vault.getAbstractFileByPath(t);if(!e)return null;try{return await this.app.vault.read(e)}catch(s){return null}}async upsertText(t,e){let s=this.app.vault.getAbstractFileByPath(t);s instanceof h.TFile?await this.app.vault.modify(s,e):await this.app.vault.create(t,e)}collectChapterVerses(t,e,s){let a=[];for(let n of t){let i=n.path||"";if(!i)continue;let g=i.split("#")[0].split("/"),o=g.pop()||"",d=g.pop()||"",l=o.replace(/\.md$/i,"");if(d===e&&l===s){let c=n.ref||"",u=Number((c.match(/:(\d+)/)||[])[1]);Number.isFinite(u)&&a.push({num:u,ref:c})}}return a.sort((n,i)=>n.num-i.num),a}buildChapterNoteContent(t,e,s){let a=`---
title: ${e} Notes
book: ${t}
created: ${this.todayISO()}
---

# ${e} \u2013 Notes

- Notes that may span multiple verses.

## Per-verse

`,n=s.map(i=>`### v-${i.num} \u2014 ${i.ref}

- 

`).join("");return a+n}getActiveEditor(){var e,s;let t=this.app.workspace.getActiveViewOfType(h.MarkdownView);return t!=null&&t.editor?t.editor:(s=(e=this.app.workspace.activeEditor)==null?void 0:e.editor)!=null?s:null}np(t){return(0,h.normalizePath)(t)}async readProgress(){var a,n,i,p,r,g;let{progressPath:t}=this.settings,e=this.app.vault.getAbstractFileByPath(t);if(!e)return{last_order:0,verses_read:0,total_verses:31102,start_date:this.todayISO(),target_days:365};let s=(n=(a=this.app.metadataCache.getFileCache(e))==null?void 0:a.frontmatter)!=null?n:{};return{last_order:Number.parseInt((i=s.last_order)!=null?i:0)||0,verses_read:Number.parseInt((p=s.verses_read)!=null?p:0)||0,total_verses:Number.parseInt((r=s.total_verses)!=null?r:31102)||31102,start_date:typeof s.start_date=="string"?s.start_date:this.todayISO(),target_days:Number.parseInt((g=s.target_days)!=null?g:365)||365}}computeFromMap(t,e){let s=0,a=0,n=!1;for(let i=0;i<e;i++){let p=t==null?void 0:t[i];(Array.isArray(p)?p.length>0:!!p)?s++:n||(a=i,n=!0)}return n||(a=e),{uniqueRead:s,firstUnread:a}}async insertTodayTarget(){var D,k,V,et,st;let{planPath:t,useMap:e,maxToday:s,previewCount:a}=this.settings,n=await this.readJson(t);if(!Array.isArray(n)||n.length===0){new h.Notice("VerseFlow: plan not found");return}let i=await this.readProgress(),p=i.verses_read,r=i.last_order,g=await this.readJson(this.settings.mapPath);if(e&&g){let S=this.computeFromMap(g,n.length);p=S.uniqueRead,r=S.firstUnread}let o=(D=i.total_verses)!=null?D:n.length,d=this.parseDateISO((k=i.start_date)!=null?k:this.todayISO()),l=this.parseDateISO(this.todayISO()),c=Math.floor((l.getTime()-d.getTime())/864e5)+1;(!Number.isFinite(c)||c<1)&&(c=1);let u=(V=i.target_days)!=null?V:365,m=Math.ceil(o*c/u);(!Number.isFinite(m)||m<0)&&(m=0);let v=Math.max(0,o-p),w=Math.max(1,u-c),f=Math.ceil(v/w);(!Number.isFinite(f)||f<1)&&(f=1);let x=Math.max(1,m-p||f),F=Math.min(x,s,Math.max(0,n.length-r)),_=this.getActiveEditor();if(!_){new h.Notice("VerseFlow: no active editor");return}let $=S=>{var P;return(P=S.split("#")[0].split("/").pop())!=null?P:""},b=S=>S.split("#")[0].replace(/\.md$/,""),y=[],M=o?((p!=null?p:0)/o*100).toFixed(1):"0.0";y.push(`Progress: ${p}/${o} (${M}%). Target ${u} days from ${i.start_date}. Today's pace: ${f}.`),y.push(`> [!abstract]+ Today's target to stay on schedule (${F})`),y.push("> ");let C="";for(let S=0;S<F;S++){let P=n[r+S];if(!P)break;let T=$(P.path),Z=b(P.path);T!==C&&(y.push(`> **[[${Z}|${T}]]**`),C=T);let E=r+S,I=`[[${P.path}|${P.ref}]]`,J=(P.path||"").split("#")[0].split("/"),H=J.pop()||"",X=J.pop()||"Bible",W=H.replace(/\.md$/i,""),G=(K=>K.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(W),L=`${this.settings.notesBasePath}/${X}/${G}${this.settings.notesSuffix}`,z=Number(((P.ref||"").match(/:(\d+)/)||[])[1]),j=Number.isFinite(z)?`#v-${z}`:`#i-${E}`,U=(et=this.settings.notesLinkMode)!=null?et:"dual",A=I;U==="chapter"?A=`[[${L}${j}|${P.ref} notes]]`:U==="dual"&&(A=`${I} \u2022 [[${L}${j}|notes]]`),y.push(`> - [ ] ${A} (idx:${E})`)}let R=r+F,O=n.slice(R,Math.min(R+a,n.length));y.push(`
> [!abstract]- Next ${O.length} verses after today's target (boundaries shown)`),C="";for(let S=0;S<O.length;S++){let P=O[S],T=$(P.path),Z=b(P.path);T!==C&&(y.push(`> **[[${Z}|${T}]]**`),C=T);let E=R+S,I=`[[${P.path}|${P.ref}]]`,J=(P.path||"").split("#")[0].split("/"),H=J.pop()||"",X=J.pop()||"Bible",W=H.replace(/\.md$/i,""),G=(K=>K.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(W),L=`${this.settings.notesBasePath}/${X}/${G}${this.settings.notesSuffix}`,z=Number(((P.ref||"").match(/:(\d+)/)||[])[1]),j=Number.isFinite(z)?`#v-${z}`:`#i-${E}`,U=(st=this.settings.notesLinkMode)!=null?st:"dual",A=I;U==="chapter"?A=`[[${L}${j}|${P.ref} notes]]`:U==="dual"&&(A=`${I} \u2022 [[${L}${j}|notes]]`),y.push(`> - [ ] ${A} (idx:${E})`)}_.replaceSelection(y.join(`
`)+`
`)}async setupVerseFlowFiles(){let{progressPath:t,eventsPath:e,mapPath:s}=this.settings,a=async(o,d)=>{this.app.vault.getAbstractFileByPath(o)||await this.app.vault.create(o,d)},i=`---
last_order: 0
verses_read: 0
total_verses: 31102
start_date: ${this.todayISO()}
target_days: 365
---
`;await a(t,i),await a(e,`| timestamp | idx | ref | path |
|---|---:|---|---|
`),await a("Bible-Read-Log.md",`| date | start_ref | end_ref | count | last_order |
|---|---|---|---:|---:|
`),this.app.vault.getAbstractFileByPath(s)||await this.app.vault.create(s,`{}
`);let r="Bible-Dashboard.md";this.app.vault.getAbstractFileByPath(r)||await this.app.vault.create(r,this.getDashboardContent()),new h.Notice("VerseFlow: setup complete")}async scaffoldChapterNotesCommand(){var r;let{planPath:t,notesBasePath:e,notesSuffix:s}=this.settings,a=await this.readJson(t);if(!Array.isArray(a)||a.length===0){new h.Notice("VerseFlow: plan not found");return}try{this.app.vault.getAbstractFileByPath(e)||await this.app.vault.createFolder(e)}catch(g){}let n=new Map;for(let g of a){let o=g.path||"";if(!o)continue;let l=o.split("#")[0].split("/"),c=l.pop()||"",u=l.pop()||"Bible",m=c.replace(/\.md$/i,""),v=g.ref||"",w=Number((v.match(/:(\d+)/)||[])[1]);if(!Number.isFinite(w))continue;let f=`${u}/${m}`,x=n.get(f)||{book:u,base:m,verses:[]};x.verses.push({num:w,ref:v}),n.set(f,x)}let i=new Set,p=0;for(let g of a){let o=(g.path||"").split("#")[0];if(!o)continue;let d=o.split("/"),l=d.pop()||"",c=d.pop()||"Bible",u=l.replace(/\.md$/i,""),v=(F=>F.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(u),w=`${e}/${c}`,f=`${w}/${v}${s}`;if(i.has(f))continue;i.add(f);try{this.app.vault.getAbstractFileByPath(w)||await this.app.vault.createFolder(w)}catch(F){}if(!this.app.vault.getAbstractFileByPath(f)){let F=`${c}/${u}`,_=((r=n.get(F))==null?void 0:r.verses)||this.collectChapterVerses(a,c,u),$=this.buildChapterNoteContent(c,u,_);await this.app.vault.create(f,$),p++}}new h.Notice(`VerseFlow: scaffolded ${p} chapter note(s) under ${e}`)}async openChapterNoteAtCursor(){let t=this.getActiveEditor();if(!t){new h.Notice("VerseFlow: no active editor");return}let e=t.getCursor(),s=t.getLine(e.line)||"",a=s.match(/\[\[([^\]|]+)\|([^\]]+)\]\]/),n=s.match(/\(idx:(\d+)\)/);if(!a){new h.Notice("VerseFlow: no verse link on this line");return}let i=a[1],p=a[2],r=Number(((p||"").match(/:(\d+)/)||[])[1]),o=(i||"").split("#")[0].split("/"),d=o.pop()||"",l=o.pop()||"Bible",c=d.replace(/\.md$/i,""),m=($=>$.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(c),v=`${this.settings.notesBasePath}/${l}`,w=`${v}/${m}${this.settings.notesSuffix}`;try{this.app.vault.getAbstractFileByPath(v)||await this.app.vault.createFolder(v)}catch($){}let f=this.app.vault.getAbstractFileByPath(w);if(!f){let $=await this.readJson(this.settings.planPath)||[],b=this.collectChapterVerses($,l,c),y=this.buildChapterNoteContent(l,c,b);await this.app.vault.create(w,y),f=this.app.vault.getAbstractFileByPath(w)}let x=Number.isFinite(r)?`v-${r}`:n?`i-${n[1]}`:"v-1",F=await this.app.vault.read(f);if(!new RegExp(`^#{1,6}\\s+${x}\\b`,"m").test(F)){let $=`
### ${x} \u2014 ${p}

`;F+=$,await this.app.vault.modify(f,F)}await this.app.workspace.getLeaf(!0).openFile(f),new h.Notice(`VerseFlow: opened ${m}${this.settings.notesSuffix} at ${x}`)}async finalizeBibleRead(){var x,F,_,$;let{eventsPath:t,mapPath:e,planPath:s,progressPath:a}=this.settings,n=this.getActiveEditor();if(!n){new h.Notice("VerseFlow: no active editor");return}let i=n.getValue(),p=/\[[xX]\][^\n]*\(idx:(\d+)\)/g,r,g=new Set;for(;(r=p.exec(i))!==null;){let b=Number.parseInt(r[1]);Number.isNaN(b)||g.add(b)}if(g.size===0){new h.Notice("VerseFlow: no checked items found");return}let o=await this.readJson(e)||{},d=new Date,l=new Date(d.getTime()-d.getTimezoneOffset()*6e4).toISOString().slice(0,19),c=[...g].sort((b,y)=>b-y);for(let b of c){Array.isArray(o[b])||(o[b]=[]);let y=o[b];y[y.length-1]!==l&&y.push(l)}await this.writeJson(e,o);let u=await this.readJson(s)||[],m=this.computeFromMap(o,u.length);await this.updateProgressFrontmatter(a,m.firstUnread,m.uniqueRead);let v=`| timestamp | idx | ref | path |
|---|---:|---|---|
`,w="";for(let b of c){let y=u[b];y&&(w+=`| ${l} | ${b} | ${y.ref} | ${y.path} |
`)}let f=this.app.vault.getAbstractFileByPath(t);if(f){let b=await this.app.vault.read(f);/\n\|\s*timestamp\s*\|/.test(b)?await this.app.vault.modify(f,b+w):await this.app.vault.modify(f,b+`
`+v+w)}else await this.app.vault.create(t,v+w);try{let b="Bible-Read-Log.md",y=`| date | start_ref | end_ref | count | last_order |
|---|---|---|---:|---:|
`,M=c[0],C=c[c.length-1],R=(F=(x=u[M])==null?void 0:x.ref)!=null?F:"",O=($=(_=u[C])==null?void 0:_.ref)!=null?$:"",D=`| ${l.slice(0,10)} | ${R} | ${O} | ${c.length} | ${m.firstUnread} |
`,k=this.app.vault.getAbstractFileByPath(b);if(k){let V=await this.app.vault.read(k);/\n\|\s*date\s*\|/.test(V)?await this.app.vault.modify(k,V+D):await this.app.vault.modify(k,V+`
`+y+D)}else await this.app.vault.create(b,y+D)}catch(b){}new h.Notice(`VerseFlow: finalized ${c.length} verse(s)`)}async updateProgressFrontmatter(t,e,s){let a=this.app.vault.getAbstractFileByPath(this.np(t));a&&await this.app.fileManager.processFrontMatter(a,n=>{n.last_order=e,n.verses_read=s})}async clearBibleCheckboxes(){let t=this.getActiveEditor();if(!t){new h.Notice("VerseFlow: no active editor");return}let e=t.getValue(),s=e.replace(/\[\s*[xX]\s*\](?=[^\n]*\(idx:\d+\))/g,"[ ]");s!==e&&t.setValue(s),new h.Notice("VerseFlow: cleared checks")}async seedMapFromProgress(){var d;let{mapPath:t,progressPath:e,planPath:s}=this.settings,a=await this.readProgress(),n=await this.readJson(s)||[],i=Math.min((d=a.verses_read)!=null?d:0,n.length),p={},r=new Date,g=new Date(r.getTime()-r.getTimezoneOffset()*6e4).toISOString().slice(0,19);for(let l=0;l<i;l++)p[l]=[g];await this.writeJson(t,p);let o=this.computeFromMap(p,n.length);await this.updateProgressFrontmatter(e,o.firstUnread,o.uniqueRead),new h.Notice(`VerseFlow: seeded ${i} indices from progress`)}async recomputeProgressFromMapCommand(){let{mapPath:t,planPath:e,progressPath:s}=this.settings,a=await this.readJson(t)||{},n=await this.readJson(e)||[],i=this.computeFromMap(a,n.length);await this.updateProgressFrontmatter(s,i.firstUnread,i.uniqueRead),new h.Notice(`VerseFlow: recomputed progress (read=${i.uniqueRead})`)}async rebuildMapFromEventsCommand(){let{eventsPath:t,mapPath:e,planPath:s,progressPath:a}=this.settings,p=(await this.readText(t)||"").split(`
`).filter(d=>d.startsWith("|")&&!/^\|\s*-/.test(d)).slice(1),r={};for(let d of p){let l=d.split("|").map(c=>c.trim());if(l.length>=5){let c=l[1],u=Number(l[2]);if(Number.isFinite(u)&&c){Array.isArray(r[u])||(r[u]=[]);let m=r[u];m[m.length-1]!==c&&m.push(c)}}}await this.writeJson(e,r);let g=await this.readJson(s)||[],o=this.computeFromMap(r,g.length);await this.updateProgressFrontmatter(a,o.firstUnread,o.uniqueRead),new h.Notice(`VerseFlow: rebuilt map from events (${Object.keys(r).length} entries)`)}async openBibleDashboard(){let t="Bible-Dashboard.md",e=this.app.vault.getAbstractFileByPath(t);if(!e){new h.Notice("VerseFlow: dashboard not found");return}await this.app.workspace.getLeaf(!0).openFile(e)}getDashboardContent(){return`# Bible Reading Dashboard

- **Overview**: Live progress and history powered by VerseFlow + Dataview.
- Ensure the Dataview plugin is enabled and DataviewJS is allowed.

## Progress (DataviewJS)

\`\`\`dataviewjs
{
  const p = dv.page("Bible-Progress");
  if (!p) { dv.paragraph("Bible-Progress.md not found"); } else {
    const total = p.total_verses ?? 31102;
    const pct = total ? ((p.verses_read ?? 0) / total * 100).toFixed(1) + "%" : "0.0%";
    dv.table([
      "last_order","verses_read","total_verses","progress","start_date","target_days"
    ], [[
      p.last_order ?? 0,
      p.verses_read ?? 0,
      total,
      pct,
      p.start_date ?? dv.luxon.DateTime.now().toISODate(),
      p.target_days ?? 365
    ]]);
  }
}
\`\`\`

## Recommended pace today (DataviewJS)

\`\`\`dataviewjs
{
  const p = dv.page("Bible-Progress");
  if (!p) { dv.el("div", "Bible-Progress.md not found"); } else {
    const total = p.total_verses ?? 31102;
    const start = new Date((p.start_date ?? dv.current().file.ctime.toISODate()) + "T00:00:00");
    const today = new Date(dv.current().file.cday.toISODate() + "T00:00:00");
    const daysElapsed = Math.max(1, Math.floor((today - start) / 86400000) + 1);
    const targetDays = p.target_days ?? 365;
    const expected = Math.ceil((total * daysElapsed) / targetDays);
    const remaining = Math.max(0, total - (p.verses_read ?? 0));
    const daysRemaining = Math.max(1, targetDays - daysElapsed);
    const pace = Math.max(1, Math.ceil(remaining / daysRemaining));
    const catchup = Math.max(0, expected - (p.verses_read ?? 0));
    dv.paragraph(\`Recommended today: \${catchup || pace} verses (pace \${pace}, catch-up \${catchup}).\`);
  }
}
\`\`\`
`}async regenerateBibleDashboard(){let t="Bible-Dashboard.md",e=this.app.vault.getAbstractFileByPath(t),s=this.getDashboardContent();e?await this.app.vault.modify(e,s):await this.app.vault.create(t,s),new h.Notice("VerseFlow: Bible-Dashboard regenerated")}async insertProgressSummary(){var m,v,w,f,x;let t=this.getActiveEditor(),{planPath:e}=this.settings,s=await this.readJson(e)||[],a=await this.readProgress(),n=(m=a.total_verses)!=null?m:s.length,i=this.parseDateISO((v=a.start_date)!=null?v:this.todayISO()),p=this.parseDateISO(this.todayISO()),r=Math.floor((p.getTime()-i.getTime())/864e5)+1;(!Number.isFinite(r)||r<1)&&(r=1);let g=(w=a.target_days)!=null?w:365,o=Math.max(0,n-((f=a.verses_read)!=null?f:0)),d=Math.max(1,g-r),l=Math.ceil(o/d);(!Number.isFinite(l)||l<1)&&(l=1);let c=n?(((x=a.verses_read)!=null?x:0)/n*100).toFixed(1):"0.0",u=`> Progress: ${a.verses_read}/${n} (${c}%). Target ${g} days from ${a.start_date}. Today's pace: ${l}.`;if(this.settings.includeDashboardLink&&(u+=" See [[Bible-Dashboard|Bible Dashboard]] for overall progress."),t)t.replaceSelection(u+`
`);else{let F="VerseFlow-Summary.md",_=await this.readText(F)||"",$=_.endsWith(`
`)||_.length===0?_+u+`
`:_+`
`+u+`
`;await this.upsertText(F,$),new h.Notice(`VerseFlow: summary appended to ${F}`)}}async appendNotesForChecked(){let t=this.getActiveEditor();if(!t){new h.Notice("VerseFlow: no active editor");return}let e=t.getValue(),s=/^>\s*-\s*\[(?:x|X)\]\s*(.*?)(\(idx:(\d+)\))?\s*$/gm,a=/\[\[([^\]|]+)\|([^\]]+)\]\]/,n={},i;for(;(i=s.exec(e))!==null;){let d=i[0].match(a);if(!d)continue;let l=d[1],c=d[2],u=i[3],v=(l||"").split("#")[0].split("/"),w=v.pop()||"",f=v.pop()||"Bible",x=w.replace(/\.md$/i,""),_=(C=>C.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(x),$=`${this.settings.notesBasePath}/${f}`,b=`${$}/${_}${this.settings.notesSuffix}`,y=Number(((c||"").match(/:(\d+)/)||[])[1]),M=Number.isFinite(y)?`v-${y}`:u?`i-${u}`:"v-1";n[b]||(n[b]=[]),n[b].push({destDir:$,destPath:b,anchor:M,ref:c,chapterBase:x})}let p=0,r=0,g=await this.readJson(this.settings.planPath)||[];for(let[o,d]of Object.entries(n)){let{destDir:l}=d[0];try{this.app.vault.getAbstractFileByPath(l)||await this.app.vault.createFolder(l)}catch(m){}let c=this.app.vault.getAbstractFileByPath(o);if(!c){let m=this.collectChapterVerses(g,l.split("/").pop()||"Bible",d[0].chapterBase),v=this.buildChapterNoteContent(l.split("/").pop()||"Bible",d[0].chapterBase,m);await this.app.vault.create(o,v),c=this.app.vault.getAbstractFileByPath(o),p++}let u=await this.app.vault.read(c);for(let m of d)if(!new RegExp(`^#{1,6}\\s+${m.anchor}\\b`,"m").test(u)){let v=`
### ${m.anchor} \u2014 ${m.ref}

- `;u+=v,r++}await this.app.vault.modify(c,u)}new h.Notice(`VerseFlow: updated ${Object.keys(n).length} note(s), added ${r} anchor(s)`)}},tt=class extends h.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"VerseFlow Settings"});let e=(i,p,r)=>{new h.Setting(t).setName(i).setDesc(p).addText(g=>{var o;return g.setValue(String((o=this.plugin.settings[r])!=null?o:"")).onChange(async d=>{this.plugin.settings[r]=d,await this.plugin.saveSettings()})})},s=(i,p,r)=>{new h.Setting(t).setName(i).setDesc(p).addToggle(g=>g.setValue(!!this.plugin.settings[r]).onChange(async o=>{this.plugin.settings[r]=o,await this.plugin.saveSettings()}))},a=(i,p,r)=>{new h.Setting(t).setName(i).setDesc(p).addText(g=>{var o;return g.setValue(String((o=this.plugin.settings[r])!=null?o:"")).onChange(async d=>{let l=Number.parseInt(d);this.plugin.settings[r]=Number.isFinite(l)?l:Y[r],await this.plugin.saveSettings()})})},n=(i,p,r,g)=>{new h.Setting(t).setName(i).setDesc(p).addDropdown(o=>{var d;Object.entries(g).forEach(([l,c])=>o.addOption(l,c)),o.setValue(String((d=this.plugin.settings[r])!=null?d:Y[r])).onChange(async l=>{this.plugin.settings[r]=l,await this.plugin.saveSettings()})})};e("Plan Path","Vault-relative path to chronological plan JSON.","planPath"),e("Progress Path","Vault-relative path to Bible-Progress.md.","progressPath"),e("Map Path","Vault-relative path to bible-read-map.json.","mapPath"),e("Events Path","Vault-relative path to Bible-Read-Events.md.","eventsPath"),s("Use Map","Prefer progress derived from map over frontmatter.","useMap"),a("Max Today","Upper bound for today's target length.","maxToday"),a("Preview Count","How many verses to preview after today's list.","previewCount"),s("Include Dashboard Link","Add a link to Bible-Dashboard at the top of inserted targets.","includeDashboardLink"),s("Run Setup On Enable","Run one-time setup automatically the first time the plugin is enabled.","setupOnFirstEnable"),e("Notes Base Path","Folder to store per-chapter notes (will be created if missing).","notesBasePath"),e("Notes Suffix","File name suffix for chapter notes (e.g., _notes.md).","notesSuffix"),n("Notes Link Mode","How links appear in Today's Target: verse only, chapter-note only, or both.","notesLinkMode",{verse:"Verse only",chapter:"Chapter note only",dual:"Verse + notes (default)"})}};
