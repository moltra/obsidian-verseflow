/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var Q=Object.defineProperty;var rt=Object.getOwnPropertyDescriptor;var it=Object.getOwnPropertyNames;var ot=Object.prototype.hasOwnProperty;var lt=(N,B)=>{for(var t in B)Q(N,t,{get:B[t],enumerable:!0})},ct=(N,B,t,e)=>{if(B&&typeof B=="object"||typeof B=="function")for(let s of it(B))!ot.call(N,s)&&s!==t&&Q(N,s,{get:()=>B[s],enumerable:!(e=rt(B,s))||e.enumerable});return N};var pt=N=>ct(Q({},"__esModule",{value:!0}),N);var dt={};lt(dt,{default:()=>q});module.exports=pt(dt);var g=require("obsidian"),Y={planPath:"chronological_plan.vault.json",progressPath:"Bible-Progress.md",mapPath:"bible-read-map.json",eventsPath:"Bible-Read-Events.md",useMap:!0,maxToday:40,previewCount:20,includeDashboardLink:!0,setupOnFirstEnable:!1,initialized:!1,notesBasePath:"VerseNotes",notesSuffix:"_notes.md",notesLinkMode:"dual"},q=class extends g.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new tt(this.app,this));try{this.settings.setupOnFirstEnable&&!this.settings.initialized&&(await this.setupVerseFlowFiles(),this.settings.initialized=!0,await this.saveSettings())}catch(t){}this.addCommand({id:"vf-insert-today-target",name:"Insert Today\u2019s Target",editorCallback:()=>this.insertTodayTarget()}),this.addCommand({id:"vf-finalize",name:"Finalize Bible Read",editorCallback:()=>this.finalizeBibleRead()}),this.addCommand({id:"vf-clear-checkboxes",name:"Clear Bible Checkboxes",editorCallback:()=>this.clearBibleCheckboxes()}),this.addCommand({id:"vf-seed-map-from-progress",name:"Seed Map From Progress",callback:()=>this.seedMapFromProgress()}),this.addCommand({id:"vf-recompute-progress-from-map",name:"Recompute Progress From Map",callback:()=>this.recomputeProgressFromMapCommand()}),this.addCommand({id:"vf-rebuild-map-from-events",name:"Rebuild Map From Events",callback:()=>this.rebuildMapFromEventsCommand()}),this.addCommand({id:"vf-open-dashboard",name:"Open Bible Dashboard",callback:()=>this.openBibleDashboard()}),this.addCommand({id:"vf-insert-progress-summary",name:"Insert Progress Summary (read-only)",callback:()=>this.insertProgressSummary()}),this.addCommand({id:"vf-setup-notes",name:"Setup VerseFlow Files",callback:()=>this.setupVerseFlowFiles()}),this.addCommand({id:"vf-scaffold-chapter-notes",name:"Scaffold Chapter Notes From Plan",callback:()=>this.scaffoldChapterNotesCommand()}),this.addCommand({id:"vf-open-chapter-note-at-cursor",name:"Open Chapter Note at Cursor",editorCallback:()=>this.openChapterNoteAtCursor()}),this.addCommand({id:"vf-append-notes-for-checked",name:"Append Notes For Checked Verses",editorCallback:()=>this.appendNotesForChecked()}),this.addCommand({id:"vf-regenerate-dashboard",name:"Regenerate Bible Dashboard",callback:()=>this.regenerateBibleDashboard()});try{this.addRibbonIcon("checkmark","VerseFlow: Finalize Bible Read",()=>this.finalizeBibleRead())}catch(t){}try{this.addRibbonIcon("document","VerseFlow: Insert Today\u2019s Target",()=>this.insertTodayTarget())}catch(t){}try{this.addRibbonIcon("trash","VerseFlow: Clear Bible Checkboxes",()=>this.clearBibleCheckboxes())}catch(t){}}async loadSettings(){this.settings=Object.assign({},Y,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}todayISO(){return new Date().toISOString().slice(0,10)}parseDateISO(t){return new Date(`${t}T00:00:00`)}async readJson(t){let e=this.app.vault.getAbstractFileByPath(t);if(!e)return null;try{return JSON.parse(await this.app.vault.read(e))}catch(s){return null}}async writeJson(t,e){let s=this.app.vault.getAbstractFileByPath(t),n=JSON.stringify(e,null,2);s instanceof g.TFile?await this.app.vault.modify(s,n):await this.app.vault.create(t,n)}async readText(t){let e=this.app.vault.getAbstractFileByPath(t);if(!e)return null;try{return await this.app.vault.read(e)}catch(s){return null}}async upsertText(t,e){let s=this.app.vault.getAbstractFileByPath(t);s instanceof g.TFile?await this.app.vault.modify(s,e):await this.app.vault.create(t,e)}collectChapterVerses(t,e,s){let n=[],i=(r,a)=>{Number.isFinite(r)&&n.push({num:r,ref:a})},o=(r,a)=>{let h=r.path||"";if(!h)return!1;let[l,d=""]=h.split("#"),c=l.split("/"),p=c.pop()||"",u=c.pop()||"",m=p.replace(/\.md$/i,"");if((!a||u===e)&&m===s){let w=r.ref||"",y=Number((w.match(/:(\d+)/i)||[])[1]);if(!Number.isFinite(y)){let f=d.match(/^\^?v(\d+)/i)||h.match(/#\^?v(\d+)/i);y=Number((f||[])[1])}return i(y,w||`${s}:${Number.isFinite(y)?y:""}`.trim()),!0}return!1};for(let r of t)o(r,!0);if(n.length===0)for(let r of t)o(r,!1);return n.sort((r,a)=>r.num-a.num),n}buildChapterNoteContent(t,e,s){let n=`---
title: ${e} Notes
book: ${t}
created: ${this.todayISO()}
---

# ${e} \u2013 Notes

- Notes that may span multiple verses.

## Per-verse

`,i=s.map(o=>`### v-${o.num} \u2014 ${o.ref}

- 

`).join("");return n+i}getActiveEditor(){var e,s;let t=this.app.workspace.getActiveViewOfType(g.MarkdownView);return t!=null&&t.editor?t.editor:(s=(e=this.app.workspace.activeEditor)==null?void 0:e.editor)!=null?s:null}np(t){return(0,g.normalizePath)(t)}async readProgress(){var n,i,o,r,a,h;let{progressPath:t}=this.settings,e=this.app.vault.getAbstractFileByPath(t);if(!e)return{last_order:0,verses_read:0,total_verses:31102,start_date:this.todayISO(),target_days:365};let s=(i=(n=this.app.metadataCache.getFileCache(e))==null?void 0:n.frontmatter)!=null?i:{};return{last_order:Number.parseInt((o=s.last_order)!=null?o:0)||0,verses_read:Number.parseInt((r=s.verses_read)!=null?r:0)||0,total_verses:Number.parseInt((a=s.total_verses)!=null?a:31102)||31102,start_date:typeof s.start_date=="string"?s.start_date:this.todayISO(),target_days:Number.parseInt((h=s.target_days)!=null?h:365)||365}}computeFromMap(t,e){let s=0,n=0,i=!1;for(let o=0;o<e;o++){let r=t==null?void 0:t[o];(Array.isArray(r)?r.length>0:!!r)?s++:i||(n=o,i=!0)}return i||(n=e),{uniqueRead:s,firstUnread:n}}async insertTodayTarget(){var D,k,V,et,st;let{planPath:t,useMap:e,maxToday:s,previewCount:n}=this.settings,i=await this.readJson(t);if(!Array.isArray(i)||i.length===0){new g.Notice("VerseFlow: plan not found");return}let o=await this.readProgress(),r=o.verses_read,a=o.last_order,h=await this.readJson(this.settings.mapPath);if(e&&h){let S=this.computeFromMap(h,i.length);r=S.uniqueRead,a=S.firstUnread}let l=(D=o.total_verses)!=null?D:i.length,d=this.parseDateISO((k=o.start_date)!=null?k:this.todayISO()),c=this.parseDateISO(this.todayISO()),p=Math.floor((c.getTime()-d.getTime())/864e5)+1;(!Number.isFinite(p)||p<1)&&(p=1);let u=(V=o.target_days)!=null?V:365,m=Math.ceil(l*p/u);(!Number.isFinite(m)||m<0)&&(m=0);let w=Math.max(0,l-r),y=Math.max(1,u-p),f=Math.ceil(w/y);(!Number.isFinite(f)||f<1)&&(f=1);let x=Math.max(1,m-r||f),F=Math.min(x,s,Math.max(0,i.length-a)),_=this.getActiveEditor();if(!_){new g.Notice("VerseFlow: no active editor");return}let $=S=>{var P;return(P=S.split("#")[0].split("/").pop())!=null?P:""},b=S=>S.split("#")[0].replace(/\.md$/,""),v=[],M=l?((r!=null?r:0)/l*100).toFixed(1):"0.0";v.push(`Progress: ${r}/${l} (${M}%). Target ${u} days from ${o.start_date}. Today's pace: ${f}.`),v.push(`> [!abstract]+ Today's target to stay on schedule (${F})`),v.push("> ");let C="";for(let S=0;S<F;S++){let P=i[a+S];if(!P)break;let T=$(P.path),Z=b(P.path);T!==C&&(v.push(`> **[[${Z}|${T}]]**`),C=T);let E=a+S,I=`[[${P.path}|${P.ref}]]`,J=(P.path||"").split("#")[0].split("/"),H=J.pop()||"",X=J.pop()||"Bible",W=H.replace(/\.md$/i,""),G=(K=>K.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(W),L=`${this.settings.notesBasePath}/${X}/${G}${this.settings.notesSuffix}`,z=Number(((P.ref||"").match(/:(\d+)/)||[])[1]),j=Number.isFinite(z)?`#v-${z}`:`#i-${E}`,U=(et=this.settings.notesLinkMode)!=null?et:"dual",A=I;U==="chapter"?A=`[[${L}${j}|${P.ref} notes]]`:U==="dual"&&(A=`${I} \u2022 [[${L}${j}|notes]]`),v.push(`> - [ ] ${A} (idx:${E})`)}let R=a+F,O=i.slice(R,Math.min(R+n,i.length));v.push(`
> [!abstract]- Next ${O.length} verses after today's target (boundaries shown)`),C="";for(let S=0;S<O.length;S++){let P=O[S],T=$(P.path),Z=b(P.path);T!==C&&(v.push(`> **[[${Z}|${T}]]**`),C=T);let E=R+S,I=`[[${P.path}|${P.ref}]]`,J=(P.path||"").split("#")[0].split("/"),H=J.pop()||"",X=J.pop()||"Bible",W=H.replace(/\.md$/i,""),G=(K=>K.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(W),L=`${this.settings.notesBasePath}/${X}/${G}${this.settings.notesSuffix}`,z=Number(((P.ref||"").match(/:(\d+)/)||[])[1]),j=Number.isFinite(z)?`#v-${z}`:`#i-${E}`,U=(st=this.settings.notesLinkMode)!=null?st:"dual",A=I;U==="chapter"?A=`[[${L}${j}|${P.ref} notes]]`:U==="dual"&&(A=`${I} \u2022 [[${L}${j}|notes]]`),v.push(`> - [ ] ${A} (idx:${E})`)}_.replaceSelection(v.join(`
`)+`
`)}async setupVerseFlowFiles(){let{progressPath:t,eventsPath:e,mapPath:s}=this.settings,n=async(l,d)=>{this.app.vault.getAbstractFileByPath(l)||await this.app.vault.create(l,d)},o=`---
last_order: 0
verses_read: 0
total_verses: 31102
start_date: ${this.todayISO()}
target_days: 365
---
`;await n(t,o),await n(e,`| timestamp | idx | ref | path |
|---|---:|---|---|
`),await n("Bible-Read-Log.md",`| date | start_ref | end_ref | count | last_order |
|---|---|---|---:|---:|
`),this.app.vault.getAbstractFileByPath(s)||await this.app.vault.create(s,`{}
`);let a="Bible-Dashboard.md";this.app.vault.getAbstractFileByPath(a)||await this.app.vault.create(a,this.getDashboardContent()),new g.Notice("VerseFlow: setup complete")}async scaffoldChapterNotesCommand(){var a;let{planPath:t,notesBasePath:e,notesSuffix:s}=this.settings,n=await this.readJson(t);if(!Array.isArray(n)||n.length===0){new g.Notice("VerseFlow: plan not found");return}try{this.app.vault.getAbstractFileByPath(e)||await this.app.vault.createFolder(e)}catch(h){}let i=new Map;for(let h of n){let l=h.path||"";if(!l)continue;let c=l.split("#")[0].split("/"),p=c.pop()||"",u=c.pop()||"Bible",m=p.replace(/\.md$/i,""),w=h.ref||"",y=Number((w.match(/:(\d+)/)||[])[1]);if(!Number.isFinite(y))continue;let f=`${u}/${m}`,x=i.get(f)||{book:u,base:m,verses:[]};x.verses.push({num:y,ref:w}),i.set(f,x)}let o=new Set,r=0;for(let h of n){let l=(h.path||"").split("#")[0];if(!l)continue;let d=l.split("/"),c=d.pop()||"",p=d.pop()||"Bible",u=c.replace(/\.md$/i,""),w=(F=>F.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(u),y=`${e}/${p}`,f=`${y}/${w}${s}`;if(o.has(f))continue;o.add(f);try{this.app.vault.getAbstractFileByPath(y)||await this.app.vault.createFolder(y)}catch(F){}if(!this.app.vault.getAbstractFileByPath(f)){let F=`${p}/${u}`,_=((a=i.get(F))==null?void 0:a.verses)||this.collectChapterVerses(n,p,u),$=this.buildChapterNoteContent(p,u,_);await this.app.vault.create(f,$),r++}}new g.Notice(`VerseFlow: scaffolded ${r} chapter note(s) under ${e}`)}async openChapterNoteAtCursor(){let t=this.getActiveEditor();if(!t){new g.Notice("VerseFlow: no active editor");return}let e=t.getCursor(),s=t.getLine(e.line)||"",n=s.match(/\[\[([^\]|]+)\|([^\]]+)\]\]/),i=s.match(/\(idx:(\d+)\)/);if(!n){new g.Notice("VerseFlow: no verse link on this line");return}let o=n[1],r=n[2],a=Number(((r||"").match(/:(\d+)/)||[])[1]),l=(o||"").split("#")[0].split("/"),d=l.pop()||"",c=l.pop()||"Bible",p=d.replace(/\.md$/i,""),m=($=>$.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(p),w=`${this.settings.notesBasePath}/${c}`,y=`${w}/${m}${this.settings.notesSuffix}`;try{this.app.vault.getAbstractFileByPath(w)||await this.app.vault.createFolder(w)}catch($){}let f=this.app.vault.getAbstractFileByPath(y);if(!f){let $=await this.readJson(this.settings.planPath)||[],b=this.collectChapterVerses($,c,p),v=this.buildChapterNoteContent(c,p,b);await this.app.vault.create(y,v),f=this.app.vault.getAbstractFileByPath(y)}let x=Number.isFinite(a)?`v-${a}`:i?`i-${i[1]}`:"v-1",F=await this.app.vault.read(f);if(!new RegExp(`^#{1,6}\\s+${x}\\b`,"m").test(F)){let $=`
### ${x} \u2014 ${r}

`;F+=$,await this.app.vault.modify(f,F)}await this.app.workspace.getLeaf(!0).openFile(f),new g.Notice(`VerseFlow: opened ${m}${this.settings.notesSuffix} at ${x}`)}async finalizeBibleRead(){var x,F,_,$;let{eventsPath:t,mapPath:e,planPath:s,progressPath:n}=this.settings,i=this.getActiveEditor();if(!i){new g.Notice("VerseFlow: no active editor");return}let o=i.getValue(),r=/\[[xX]\][^\n]*\(idx:(\d+)\)/g,a,h=new Set;for(;(a=r.exec(o))!==null;){let b=Number.parseInt(a[1]);Number.isNaN(b)||h.add(b)}if(h.size===0){new g.Notice("VerseFlow: no checked items found");return}let l=await this.readJson(e)||{},d=new Date,c=new Date(d.getTime()-d.getTimezoneOffset()*6e4).toISOString().slice(0,19),p=[...h].sort((b,v)=>b-v);for(let b of p){Array.isArray(l[b])||(l[b]=[]);let v=l[b];v[v.length-1]!==c&&v.push(c)}await this.writeJson(e,l);let u=await this.readJson(s)||[],m=this.computeFromMap(l,u.length);await this.updateProgressFrontmatter(n,m.firstUnread,m.uniqueRead);let w=`| timestamp | idx | ref | path |
|---|---:|---|---|
`,y="";for(let b of p){let v=u[b];v&&(y+=`| ${c} | ${b} | ${v.ref} | ${v.path} |
`)}let f=this.app.vault.getAbstractFileByPath(t);if(f){let b=await this.app.vault.read(f);/\n\|\s*timestamp\s*\|/.test(b)?await this.app.vault.modify(f,b+y):await this.app.vault.modify(f,b+`
`+w+y)}else await this.app.vault.create(t,w+y);try{let b="Bible-Read-Log.md",v=`| date | start_ref | end_ref | count | last_order |
|---|---|---|---:|---:|
`,M=p[0],C=p[p.length-1],R=(F=(x=u[M])==null?void 0:x.ref)!=null?F:"",O=($=(_=u[C])==null?void 0:_.ref)!=null?$:"",D=`| ${c.slice(0,10)} | ${R} | ${O} | ${p.length} | ${m.firstUnread} |
`,k=this.app.vault.getAbstractFileByPath(b);if(k){let V=await this.app.vault.read(k);/\n\|\s*date\s*\|/.test(V)?await this.app.vault.modify(k,V+D):await this.app.vault.modify(k,V+`
`+v+D)}else await this.app.vault.create(b,v+D)}catch(b){}new g.Notice(`VerseFlow: finalized ${p.length} verse(s)`)}async updateProgressFrontmatter(t,e,s){let n=this.app.vault.getAbstractFileByPath(this.np(t));n&&await this.app.fileManager.processFrontMatter(n,i=>{i.last_order=e,i.verses_read=s})}async clearBibleCheckboxes(){let t=this.getActiveEditor();if(!t){new g.Notice("VerseFlow: no active editor");return}let e=t.getValue(),s=e.replace(/\[\s*[xX]\s*\](?=[^\n]*\(idx:\d+\))/g,"[ ]");s!==e&&t.setValue(s),new g.Notice("VerseFlow: cleared checks")}async seedMapFromProgress(){var d;let{mapPath:t,progressPath:e,planPath:s}=this.settings,n=await this.readProgress(),i=await this.readJson(s)||[],o=Math.min((d=n.verses_read)!=null?d:0,i.length),r={},a=new Date,h=new Date(a.getTime()-a.getTimezoneOffset()*6e4).toISOString().slice(0,19);for(let c=0;c<o;c++)r[c]=[h];await this.writeJson(t,r);let l=this.computeFromMap(r,i.length);await this.updateProgressFrontmatter(e,l.firstUnread,l.uniqueRead),new g.Notice(`VerseFlow: seeded ${o} indices from progress`)}async recomputeProgressFromMapCommand(){let{mapPath:t,planPath:e,progressPath:s}=this.settings,n=await this.readJson(t)||{},i=await this.readJson(e)||[],o=this.computeFromMap(n,i.length);await this.updateProgressFrontmatter(s,o.firstUnread,o.uniqueRead),new g.Notice(`VerseFlow: recomputed progress (read=${o.uniqueRead})`)}async rebuildMapFromEventsCommand(){let{eventsPath:t,mapPath:e,planPath:s,progressPath:n}=this.settings,r=(await this.readText(t)||"").split(`
`).filter(d=>d.startsWith("|")&&!/^\|\s*-/.test(d)).slice(1),a={};for(let d of r){let c=d.split("|").map(p=>p.trim());if(c.length>=5){let p=c[1],u=Number(c[2]);if(Number.isFinite(u)&&p){Array.isArray(a[u])||(a[u]=[]);let m=a[u];m[m.length-1]!==p&&m.push(p)}}}await this.writeJson(e,a);let h=await this.readJson(s)||[],l=this.computeFromMap(a,h.length);await this.updateProgressFrontmatter(n,l.firstUnread,l.uniqueRead),new g.Notice(`VerseFlow: rebuilt map from events (${Object.keys(a).length} entries)`)}async openBibleDashboard(){let t="Bible-Dashboard.md",e=this.app.vault.getAbstractFileByPath(t);if(!e){new g.Notice("VerseFlow: dashboard not found");return}await this.app.workspace.getLeaf(!0).openFile(e)}getDashboardContent(){return`# Bible Reading Dashboard

- **Overview**: Live progress and history powered by VerseFlow + Dataview.
- Ensure the Dataview plugin is enabled and DataviewJS is allowed.

## Progress (DataviewJS)

\`\`\`dataviewjs
{
  const p = dv.page("Bible-Progress");
  if (!p) { dv.paragraph("Bible-Progress.md not found"); } else {
    const total = p.total_verses ?? 31102;
    const pct = total ? ((p.verses_read ?? 0) / total * 100).toFixed(1) + "%" : "0.0%";
    dv.table([
      "last_order","verses_read","total_verses","progress","start_date","target_days"
    ], [[
      p.last_order ?? 0,
      p.verses_read ?? 0,
      total,
      pct,
      p.start_date ?? dv.luxon.DateTime.now().toISODate(),
      p.target_days ?? 365
    ]]);
  }
}
\`\`\`

## Recommended pace today (DataviewJS)

\`\`\`dataviewjs
{
  const p = dv.page("Bible-Progress");
  if (!p) { dv.el("div", "Bible-Progress.md not found"); } else {
    const total = p.total_verses ?? 31102;
    const start = new Date((p.start_date ?? dv.current().file.ctime.toISODate()) + "T00:00:00");
    const today = new Date(dv.current().file.cday.toISODate() + "T00:00:00");
    const daysElapsed = Math.max(1, Math.floor((today - start) / 86400000) + 1);
    const targetDays = p.target_days ?? 365;
    const expected = Math.ceil((total * daysElapsed) / targetDays);
    const remaining = Math.max(0, total - (p.verses_read ?? 0));
    const daysRemaining = Math.max(1, targetDays - daysElapsed);
    const pace = Math.max(1, Math.ceil(remaining / daysRemaining));
    const catchup = Math.max(0, expected - (p.verses_read ?? 0));
    dv.paragraph(\`Recommended today: \${catchup || pace} verses (pace \${pace}, catch-up \${catchup}).\`);
  }
}
\`\`\`
`}async regenerateBibleDashboard(){let t="Bible-Dashboard.md",e=this.app.vault.getAbstractFileByPath(t),s=this.getDashboardContent();e?await this.app.vault.modify(e,s):await this.app.vault.create(t,s),new g.Notice("VerseFlow: Bible-Dashboard regenerated")}async insertProgressSummary(){var m,w,y,f,x;let t=this.getActiveEditor(),{planPath:e}=this.settings,s=await this.readJson(e)||[],n=await this.readProgress(),i=(m=n.total_verses)!=null?m:s.length,o=this.parseDateISO((w=n.start_date)!=null?w:this.todayISO()),r=this.parseDateISO(this.todayISO()),a=Math.floor((r.getTime()-o.getTime())/864e5)+1;(!Number.isFinite(a)||a<1)&&(a=1);let h=(y=n.target_days)!=null?y:365,l=Math.max(0,i-((f=n.verses_read)!=null?f:0)),d=Math.max(1,h-a),c=Math.ceil(l/d);(!Number.isFinite(c)||c<1)&&(c=1);let p=i?(((x=n.verses_read)!=null?x:0)/i*100).toFixed(1):"0.0",u=`> Progress: ${n.verses_read}/${i} (${p}%). Target ${h} days from ${n.start_date}. Today's pace: ${c}.`;if(this.settings.includeDashboardLink&&(u+=" See [[Bible-Dashboard|Bible Dashboard]] for overall progress."),t)t.replaceSelection(u+`
`);else{let F="VerseFlow-Summary.md",_=await this.readText(F)||"",$=_.endsWith(`
`)||_.length===0?_+u+`
`:_+`
`+u+`
`;await this.upsertText(F,$),new g.Notice(`VerseFlow: summary appended to ${F}`)}}async appendNotesForChecked(){let t=this.getActiveEditor();if(!t){new g.Notice("VerseFlow: no active editor");return}let e=t.getValue(),s=/^>\s*-\s*\[(?:x|X)\]\s*(.*?)(\(idx:(\d+)\))?\s*$/gm,n=/\[\[([^\]|]+)\|([^\]]+)\]\]/,i={},o;for(;(o=s.exec(e))!==null;){let d=o[0].match(n);if(!d)continue;let c=d[1],p=d[2],u=o[3],w=(c||"").split("#")[0].split("/"),y=w.pop()||"",f=w.pop()||"Bible",x=y.replace(/\.md$/i,""),_=(C=>C.replace(/[^A-Za-z0-9]+/g,"_").replace(/^_+|_+$/g,""))(x),$=`${this.settings.notesBasePath}/${f}`,b=`${$}/${_}${this.settings.notesSuffix}`,v=Number(((p||"").match(/:(\d+)/)||[])[1]),M=Number.isFinite(v)?`v-${v}`:u?`i-${u}`:"v-1";i[b]||(i[b]=[]),i[b].push({destDir:$,destPath:b,anchor:M,ref:p,chapterBase:x})}let r=0,a=0,h=await this.readJson(this.settings.planPath)||[];for(let[l,d]of Object.entries(i)){let{destDir:c}=d[0];try{this.app.vault.getAbstractFileByPath(c)||await this.app.vault.createFolder(c)}catch(m){}let p=this.app.vault.getAbstractFileByPath(l);if(!p){let m=this.collectChapterVerses(h,c.split("/").pop()||"Bible",d[0].chapterBase),w=this.buildChapterNoteContent(c.split("/").pop()||"Bible",d[0].chapterBase,m);await this.app.vault.create(l,w),p=this.app.vault.getAbstractFileByPath(l),r++}let u=await this.app.vault.read(p);for(let m of d)if(!new RegExp(`^#{1,6}\\s+${m.anchor}\\b`,"m").test(u)){let w=`
### ${m.anchor} \u2014 ${m.ref}

- `;u+=w,a++}await this.app.vault.modify(p,u)}new g.Notice(`VerseFlow: updated ${Object.keys(i).length} note(s), added ${a} anchor(s)`)}},tt=class extends g.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"VerseFlow Settings"});let e=(o,r,a)=>{new g.Setting(t).setName(o).setDesc(r).addText(h=>{var l;return h.setValue(String((l=this.plugin.settings[a])!=null?l:"")).onChange(async d=>{this.plugin.settings[a]=d,await this.plugin.saveSettings()})})},s=(o,r,a)=>{new g.Setting(t).setName(o).setDesc(r).addToggle(h=>h.setValue(!!this.plugin.settings[a]).onChange(async l=>{this.plugin.settings[a]=l,await this.plugin.saveSettings()}))},n=(o,r,a)=>{new g.Setting(t).setName(o).setDesc(r).addText(h=>{var l;return h.setValue(String((l=this.plugin.settings[a])!=null?l:"")).onChange(async d=>{let c=Number.parseInt(d);this.plugin.settings[a]=Number.isFinite(c)?c:Y[a],await this.plugin.saveSettings()})})},i=(o,r,a,h)=>{new g.Setting(t).setName(o).setDesc(r).addDropdown(l=>{var d;Object.entries(h).forEach(([c,p])=>l.addOption(c,p)),l.setValue(String((d=this.plugin.settings[a])!=null?d:Y[a])).onChange(async c=>{this.plugin.settings[a]=c,await this.plugin.saveSettings()})})};e("Plan Path","Vault-relative path to chronological plan JSON.","planPath"),e("Progress Path","Vault-relative path to Bible-Progress.md.","progressPath"),e("Map Path","Vault-relative path to bible-read-map.json.","mapPath"),e("Events Path","Vault-relative path to Bible-Read-Events.md.","eventsPath"),s("Use Map","Prefer progress derived from map over frontmatter.","useMap"),n("Max Today","Upper bound for today's target length.","maxToday"),n("Preview Count","How many verses to preview after today's list.","previewCount"),s("Include Dashboard Link","Add a link to Bible-Dashboard at the top of inserted targets.","includeDashboardLink"),s("Run Setup On Enable","Run one-time setup automatically the first time the plugin is enabled.","setupOnFirstEnable"),e("Notes Base Path","Folder to store per-chapter notes (will be created if missing).","notesBasePath"),e("Notes Suffix","File name suffix for chapter notes (e.g., _notes.md).","notesSuffix"),i("Notes Link Mode","How links appear in Today's Target: verse only, chapter-note only, or both.","notesLinkMode",{verse:"Verse only",chapter:"Chapter note only",dual:"Verse + notes (default)"})}};
