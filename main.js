/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var E=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var q=Object.prototype.hasOwnProperty;var L=(F,P)=>{for(var t in P)E(F,t,{get:P[t],enumerable:!0})},H=(F,P,t,e)=>{if(P&&typeof P=="object"||typeof P=="function")for(let s of j(P))!q.call(F,s)&&s!==t&&E(F,s,{get:()=>P[s],enumerable:!(e=z(P,s))||e.enumerable});return F};var X=F=>H(E({},"__esModule",{value:!0}),F);var G={};L(G,{default:()=>N});module.exports=X(G);var d=require("obsidian"),U={planPath:"chronological_plan.vault.json",progressPath:"Bible-Progress.md",mapPath:"bible-read-map.json",eventsPath:"Bible-Read-Events.md",useMap:!0,maxToday:40,previewCount:20},N=class extends d.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new J(this.app,this)),this.addCommand({id:"vf-insert-today-target",name:"Insert Today\u2019s Target",callback:()=>this.insertTodayTarget()}),this.addCommand({id:"vf-finalize",name:"Finalize Bible Read",callback:()=>this.finalizeBibleRead()}),this.addCommand({id:"vf-clear-checkboxes",name:"Clear Bible Checkboxes",callback:()=>this.clearBibleCheckboxes()}),this.addCommand({id:"vf-seed-map-from-progress",name:"Seed Map From Progress",callback:()=>this.seedMapFromProgress()}),this.addCommand({id:"vf-recompute-progress-from-map",name:"Recompute Progress From Map",callback:()=>this.recomputeProgressFromMapCommand()}),this.addCommand({id:"vf-rebuild-map-from-events",name:"Rebuild Map From Events",callback:()=>this.rebuildMapFromEventsCommand()}),this.addCommand({id:"vf-open-dashboard",name:"Open Bible Dashboard",callback:()=>this.openBibleDashboard()}),this.addCommand({id:"vf-insert-progress-summary",name:"Insert Progress Summary (read-only)",callback:()=>this.insertProgressSummary()});try{this.addRibbonIcon("checkmark","VerseFlow: Finalize Bible Read",()=>this.finalizeBibleRead())}catch(t){}try{this.addRibbonIcon("document","VerseFlow: Insert Today\u2019s Target",()=>this.insertTodayTarget())}catch(t){}try{this.addRibbonIcon("trash","VerseFlow: Clear Bible Checkboxes",()=>this.clearBibleCheckboxes())}catch(t){}}async loadSettings(){this.settings=Object.assign({},U,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}todayISO(){return new Date().toISOString().slice(0,10)}parseDateISO(t){return new Date(`${t}T00:00:00`)}async readJson(t){let e=this.app.vault.getAbstractFileByPath(t);if(!e)return null;try{return JSON.parse(await this.app.vault.read(e))}catch(s){return null}}async writeJson(t,e){let s=this.app.vault.getAbstractFileByPath(t),n=JSON.stringify(e,null,2);s instanceof d.TFile?await this.app.vault.modify(s,n):await this.app.vault.create(t,n)}async readText(t){let e=this.app.vault.getAbstractFileByPath(t);if(!e)return null;try{return await this.app.vault.read(e)}catch(s){return null}}async upsertText(t,e){let s=this.app.vault.getAbstractFileByPath(t);s instanceof d.TFile?await this.app.vault.modify(s,e):await this.app.vault.create(t,e)}getActiveEditor(){var e,s;let t=this.app.workspace.activeLeaf;return(s=(e=t==null?void 0:t.view)==null?void 0:e.editor)!=null?s:null}async readProgress(){var n,a,i,o,r,l;let{progressPath:t}=this.settings,e=this.app.vault.getAbstractFileByPath(t);if(!e)return{last_order:0,verses_read:0,total_verses:31102,start_date:this.todayISO(),target_days:365};let s=(a=(n=this.app.metadataCache.getFileCache(e))==null?void 0:n.frontmatter)!=null?a:{};return{last_order:Number.parseInt((i=s.last_order)!=null?i:0)||0,verses_read:Number.parseInt((o=s.verses_read)!=null?o:0)||0,total_verses:Number.parseInt((r=s.total_verses)!=null?r:31102)||31102,start_date:typeof s.start_date=="string"?s.start_date:this.todayISO(),target_days:Number.parseInt((l=s.target_days)!=null?l:365)||365}}computeFromMap(t,e){let s=0,n=0,a=!1;for(let i=0;i<e;i++){let o=t==null?void 0:t[i];(Array.isArray(o)?o.length>0:!!o)?s++:a||(n=i,a=!0)}return a||(n=e),{uniqueRead:s,firstUnread:n}}async insertTodayTarget(){var B,V,M;let{planPath:t,useMap:e,maxToday:s,previewCount:n}=this.settings,a=await this.readJson(t);if(!Array.isArray(a)||a.length===0){new d.Notice("VerseFlow: plan not found");return}let i=await this.readProgress(),o=i.verses_read,r=i.last_order,l=await this.readJson(this.settings.mapPath);if(e&&l){let u=this.computeFromMap(l,a.length);o=u.uniqueRead,r=u.firstUnread}let p=(B=i.total_verses)!=null?B:a.length,f=this.parseDateISO((V=i.start_date)!=null?V:this.todayISO()),m=this.parseDateISO(this.todayISO()),h=Math.floor((m.getTime()-f.getTime())/864e5)+1;(!Number.isFinite(h)||h<1)&&(h=1);let w=(M=i.target_days)!=null?M:365,y=Math.ceil(p*h/w);(!Number.isFinite(y)||y<0)&&(y=0);let S=Math.max(0,p-o),x=Math.max(1,w-h),b=Math.ceil(S/x);(!Number.isFinite(b)||b<1)&&(b=1);let T=Math.max(1,y-o||b),A=Math.min(T,s,Math.max(0,a.length-r)),R=this.getActiveEditor();if(!R){new d.Notice("VerseFlow: no active editor");return}let k=u=>{var v;return(v=u.split("#")[0].split("/").pop())!=null?v:""},c=u=>u.split("#")[0].replace(/\.md$/,""),g=[];g.push(`> [!abstract]+ Today's target to stay on schedule (${A})`);let _="";for(let u=0;u<A;u++){let v=a[r+u];if(!v)break;let $=k(v.path),O=c(v.path);$!==_&&(g.push(`> **[[${O}|${$}]]**`),_=$);let D=r+u;g.push(`> - [ ] [[${v.path}|${v.ref}]] (idx:${D})`)}let C=r+A,I=a.slice(C,Math.min(C+n,a.length));g.push(`
> [!abstract]- Next ${I.length} verses after today's target (boundaries shown)`),_="";for(let u=0;u<I.length;u++){let v=I[u],$=k(v.path),O=c(v.path);$!==_&&(g.push(`> **[[${O}|${$}]]**`),_=$);let D=C+u;g.push(`> - [ ] [[${v.path}|${v.ref}]] (idx:${D})`)}R.replaceSelection(g.join(`
`)+`
`)}async finalizeBibleRead(){var T,A,R,k;let{eventsPath:t,mapPath:e,planPath:s,progressPath:n}=this.settings,a=this.getActiveEditor();if(!a){new d.Notice("VerseFlow: no active editor");return}let i=a.getValue(),o=/\[[xX]\][^\n]*\(idx:(\d+)\)/g,r,l=new Set;for(;(r=o.exec(i))!==null;){let c=Number.parseInt(r[1]);Number.isNaN(c)||l.add(c)}if(l.size===0){new d.Notice("VerseFlow: no checked items found");return}let p=await this.readJson(e)||{},f=new Date,m=new Date(f.getTime()-f.getTimezoneOffset()*6e4).toISOString().slice(0,19),h=[...l].sort((c,g)=>c-g);for(let c of h){Array.isArray(p[c])||(p[c]=[]);let g=p[c];g[g.length-1]!==m&&g.push(m)}await this.writeJson(e,p);let w=await this.readJson(s)||[],y=this.computeFromMap(p,w.length);await this.updateProgressFrontmatter(n,y.firstUnread,y.uniqueRead);let S=`| timestamp | idx | ref | path |
|---|---:|---|---|
`,x="";for(let c of h){let g=w[c];g&&(x+=`| ${m} | ${c} | ${g.ref} | ${g.path} |
`)}let b=this.app.vault.getAbstractFileByPath(t);if(b){let c=await this.app.vault.read(b);/\n\|\s*timestamp\s*\|/.test(c)?await this.app.vault.modify(b,c+x):await this.app.vault.modify(b,c+`
`+S+x)}else await this.app.vault.create(t,S+x);try{let c="Bible-Read-Log.md",g=`| date | start_ref | end_ref | count | last_order |
|---|---|---|---:|---:|
`,_=h[0],C=h[h.length-1],I=(A=(T=w[_])==null?void 0:T.ref)!=null?A:"",B=(k=(R=w[C])==null?void 0:R.ref)!=null?k:"",V=`| ${m.slice(0,10)} | ${I} | ${B} | ${h.length} | ${y.firstUnread} |
`,M=this.app.vault.getAbstractFileByPath(c);if(M){let u=await this.app.vault.read(M);/\n\|\s*date\s*\|/.test(u)?await this.app.vault.modify(M,u+V):await this.app.vault.modify(M,u+`
`+g+V)}else await this.app.vault.create(c,g+V)}catch(c){}new d.Notice(`VerseFlow: finalized ${h.length} verse(s)`)}async updateProgressFrontmatter(t,e,s){let n=this.app.vault.getAbstractFileByPath(t);if(!n)return;let a=await this.app.vault.read(n);/^---/.test(a)||(a=`---
---
`+a),/last_order:\s*\d+/i.test(a)?a=a.replace(/last_order:\s*\d+/i,`last_order: ${e}`):a=a.replace(/^---\n/,`---
last_order: ${e}
`),/verses_read:\s*\d+/i.test(a)?a=a.replace(/verses_read:\s*\d+/i,`verses_read: ${s}`):a=a.replace(/^---\n/,`---
verses_read: ${s}
`),await this.app.vault.modify(n,a)}async clearBibleCheckboxes(){let t=this.getActiveEditor();if(!t){new d.Notice("VerseFlow: no active editor");return}let e=t.getValue(),s=e.replace(/\[\s*[xX]\s*\](?=[^\n]*\(idx:\d+\))/g,"[ ]");s!==e&&t.setValue(s),new d.Notice("VerseFlow: cleared checks")}async seedMapFromProgress(){var f;let{mapPath:t,progressPath:e,planPath:s}=this.settings,n=await this.readProgress(),a=await this.readJson(s)||[],i=Math.min((f=n.verses_read)!=null?f:0,a.length),o={},r=new Date,l=new Date(r.getTime()-r.getTimezoneOffset()*6e4).toISOString().slice(0,19);for(let m=0;m<i;m++)o[m]=[l];await this.writeJson(t,o);let p=this.computeFromMap(o,a.length);await this.updateProgressFrontmatter(e,p.firstUnread,p.uniqueRead),new d.Notice(`VerseFlow: seeded ${i} indices from progress`)}async recomputeProgressFromMapCommand(){let{mapPath:t,planPath:e,progressPath:s}=this.settings,n=await this.readJson(t)||{},a=await this.readJson(e)||[],i=this.computeFromMap(n,a.length);await this.updateProgressFrontmatter(s,i.firstUnread,i.uniqueRead),new d.Notice(`VerseFlow: recomputed progress (read=${i.uniqueRead})`)}async rebuildMapFromEventsCommand(){let{eventsPath:t,mapPath:e,planPath:s,progressPath:n}=this.settings,o=(await this.readText(t)||"").split(`
`).filter(f=>f.startsWith("|")&&!/^\|\s*-/.test(f)).slice(1),r={};for(let f of o){let m=f.split("|").map(h=>h.trim());if(m.length>=5){let h=m[1],w=Number(m[2]);if(Number.isFinite(w)&&h){Array.isArray(r[w])||(r[w]=[]);let y=r[w];y[y.length-1]!==h&&y.push(h)}}}await this.writeJson(e,r);let l=await this.readJson(s)||[],p=this.computeFromMap(r,l.length);await this.updateProgressFrontmatter(n,p.firstUnread,p.uniqueRead),new d.Notice(`VerseFlow: rebuilt map from events (${Object.keys(r).length} entries)`)}async openBibleDashboard(){let t="Bible-Dashboard.md",e=this.app.vault.getAbstractFileByPath(t);if(!e){new d.Notice("VerseFlow: dashboard not found");return}await this.app.workspace.getLeaf(!0).openFile(e)}async insertProgressSummary(){var y,S,x,b,T;let t=this.getActiveEditor();if(!t){new d.Notice("VerseFlow: no active editor");return}let{planPath:e}=this.settings,s=await this.readJson(e)||[],n=await this.readProgress(),a=(y=n.total_verses)!=null?y:s.length,i=this.parseDateISO((S=n.start_date)!=null?S:this.todayISO()),o=this.parseDateISO(this.todayISO()),r=Math.floor((o.getTime()-i.getTime())/864e5)+1;(!Number.isFinite(r)||r<1)&&(r=1);let l=(x=n.target_days)!=null?x:365,p=Math.max(0,a-((b=n.verses_read)!=null?b:0)),f=Math.max(1,l-r),m=Math.ceil(p/f);(!Number.isFinite(m)||m<1)&&(m=1);let h=a?(((T=n.verses_read)!=null?T:0)/a*100).toFixed(1):"0.0",w=`> Progress: ${n.verses_read}/${a} (${h}%). Target ${l} days from ${n.start_date}. Today's pace: ${m}.`;t.replaceSelection(w+`
`)}},J=class extends d.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"VerseFlow Settings"});let e=(a,i,o)=>{new d.Setting(t).setName(a).setDesc(i).addText(r=>{var l;return r.setValue(String((l=this.plugin.settings[o])!=null?l:"")).onChange(async p=>{this.plugin.settings[o]=p,await this.plugin.saveSettings()})})},s=(a,i,o)=>{new d.Setting(t).setName(a).setDesc(i).addToggle(r=>r.setValue(!!this.plugin.settings[o]).onChange(async l=>{this.plugin.settings[o]=l,await this.plugin.saveSettings()}))},n=(a,i,o)=>{new d.Setting(t).setName(a).setDesc(i).addText(r=>{var l;return r.setValue(String((l=this.plugin.settings[o])!=null?l:"")).onChange(async p=>{let f=Number.parseInt(p);this.plugin.settings[o]=Number.isFinite(f)?f:U[o],await this.plugin.saveSettings()})})};e("Plan Path","Vault-relative path to chronological plan JSON.","planPath"),e("Progress Path","Vault-relative path to Bible-Progress.md.","progressPath"),e("Map Path","Vault-relative path to bible-read-map.json.","mapPath"),e("Events Path","Vault-relative path to Bible-Read-Events.md.","eventsPath"),s("Use Map","Prefer progress derived from map over frontmatter.","useMap"),n("Max Today","Upper bound for today's target length.","maxToday"),n("Preview Count","How many verses to preview after today's list.","previewCount")}};
